import {DatePickerPopup, StandardTableView, VerticalBox ,Button, Palette, LineEdit, ScrollView, ComboBox} from "std-widgets.slint";

import { ChangeUserEquipament } from "./change_user_equipament.slint";
import { ComputerDetail,Computers,ChangeEquipament} from "../globals/computer.slint";


component ChangeComputer inherits VerticalBox {
    VerticalLayout {
        alignment: LayoutAlignment.start;
        HorizontalLayout {
            alignment: LayoutAlignment.space-around;
            Button {
                text: @tr("update");
                clicked => {
                    ComputerDetail.save();
                }
            }

            Button {
                text: @tr("change user");
                clicked => {
                    ChangeEquipament.change_equipament = true;
                }
            }

            HorizontalLayout {
                alignment: LayoutAlignment.end;
                Button {
                    text: @tr("back");
                    height: 50px;
                    clicked => {
                        Computers.selected_computer = false;
                    }
                }
            }
        }

        GridLayout {
            Text {
                text: "model";
            }

            LineEdit {
                text: ComputerDetail.model;
            }

            Text {
                text: "brand";
                row: 2;
            }

            LineEdit {
                text: ComputerDetail.brand;
            }

            Text {
                text: "serialnumber";
                row: 3;
            }

            LineEdit {
                text: ComputerDetail.serial_number;
                enabled: false;
            }
        }

        StandardTableView {
            columns: [{ title:"name" }, { title:"initial date" },{title:"final date"}];
            rows: ComputerDetail.row_data;
        }
    }
}

component CreateComputer inherits VerticalBox {
    VerticalBox {
        alignment: LayoutAlignment.start;
        HorizontalLayout {
            alignment: LayoutAlignment.space-around;
            Button {
                text: "save";
                clicked => {
                    debug(ComputerDetail.brand);
                    debug(ComputerDetail.serial_number);
                    debug(ComputerDetail.memory);
                    debug(ComputerDetail.storage);
                    debug(ComputerDetail.model);
                    ComputerDetail.create_computer();
                    Computers.create_computer = false;
                }
            }

            Button {
                text:"back";
                clicked => {
                    Computers.create_computer = false;
                }
            }
        }

        GridLayout {
            Text {
                text: "serialnumber";
                row: 0;
            }

            LineEdit {
                edited(str) => {
                    ComputerDetail.serial_number = str
                }
                height: 50px;
            }

            Text {
                text: "storage";
                row: 1;
            }

            LineEdit {
                edited(str) => {
                    ComputerDetail.storage = str
                }
                height: 50px;
            }

            Text {
                text: "memory";
                row: 2;
            }

            LineEdit {
                edited(str) => {
                    ComputerDetail.memory = str
                }
                height: 50px;
            }

            Text {
                text: "model";
                row: 3;
            }

            ComboBox {
                model: ComputerDetail.model_equipaments;
                current-value: "";
                selected(str) => {
                    debug("combobox model:",str);
                    ComputerDetail.model_equipament = str
                }
                height: 50px;
            }

            Text {
                text: "observation";
                row: 4;
            }

            LineEdit {
                edited(str) => {
                    ComputerDetail.observation = str
                }
                height: 50px;
            }

            Text {
                text: "data entregue";
                row: 5;
            }

            date-picker-button := Button {
                text: @tr("Open Date Picker");
                clicked => {
                    date-picker.show();
                }
                height: 50px;
            }

            date-picker := DatePickerPopup {
                close-policy: PopupClosePolicy.close-on-click;
                accepted(date) => {
                    date-picker.close();
                    ComputerDetail.date_change = date;
                }
            }
        }
    }
}



component ShowComputers inherits VerticalBox {
    VerticalLayout {
        HorizontalLayout {
            Button {
                text: "create computer";
                clicked => {
                    Computers.create_computer = true;
                }
            }
        }

        StandardTableView {
            columns: [
                { title:"serialnumber" },
                { title:"actual user" },
                { title:"model" }
            ];
            rows: Computers.row_data;
            row-pointer-event(index, event, _) => {
                if event.button == PointerEventButton.left {
                    Computers.current_computer = Computers.row_data[index][0].text;
                    ComputerDetail.serial_number = Computers.row_data[index][0].text;
                    ComputerDetail.actual_user = Computers.row_data[index][1].text;
                    ComputerDetail.model = Computers.row_data[index][2].text;
                    ComputerDetail.users_history(ComputerDetail.serial_number);
                    Computers.selected_computer = true;
                }
            }
        }
    }
}

component Computer inherits VerticalBox {
    in-out property <string> serialnumber;
    if !ChangeEquipament.change_equipament:ChangeComputer { }
    if ChangeEquipament.change_equipament: ChangeUserEquipament { }
}

export component ComputerList inherits VerticalBox {
    if !Computers.selected_computer && !Computers.create_computer:ShowComputers { }
    if !Computers.selected_computer && Computers.create_computer: CreateComputer { }
    if Computers.selected_computer:  Computer { }
}
